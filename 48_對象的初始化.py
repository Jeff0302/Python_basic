class Person:
    # 在類中可以定義一些方法(魔術方法)
    # 特殊方法都是以__開頭，__結尾
    # 特殊方法我們不需要自己調用，不要嘗試去調用特殊方法
    # 特殊方法將會在特殊時刻自動調用
    # 學習特殊方法:
    #   1. 特殊方法什麼時候調用
    #   2. 特殊方法有什麼作用
    # init會在對象創建以後立即執行
    # init可以用來向新創建的對象添加初始化屬性
    # 調用類創建對象時，類後面的所有參數都會依序傳遞到__init__()中
    def __init__(self, name):
        # print('__init__方法執行了!')
        # 通過self向新創建的對象添加屬性
        self.name = name

    def say_hello(self):
        print(f'大家好!我是{self.name}')

# 目前來講，對於Person類來說name是必須的，並且每一個對象中的name屬性基本上都是不相同的
# 而我們現在是在創建完對象以後，手動將name屬性添加到對象中，這種方式很容易出現錯誤
# 我們希望創建對象時，必須設置name屬性，如果不設置對象將無法創建
#   並且屬性的創建應該是自動完成的，而不是在創建對象後手動完成
p1 = Person('孫悟空')
# 手動向對象添加name屬性
# p1.name = '孫悟空'
# p2 = Person()
# p2.name = '豬八戒'
# p3 = Person()
# p2.say_hello()

# p1.__init__()
p1.say_hello()

# 類的基本結構
# class 類名([父類]):
#   公共屬性
#   # 對象的初始方法
#   def __init__(self,...):
#       ...
#   def method1(self,...):
#       ...
#   def method2(self,...):
#       ...
#   ...




