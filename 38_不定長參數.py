# 不定長參數
# 定義一個函數，任意數字的和
# 在定義函數時，可以形參前面加一個*，這樣這個形參將會獲取到所有實參
#  它會將所有的實參保存到一個元組中
def fn1(a, b, c):
    print(a+b+c)

# *a會接收所有的位置實參，並統一將這些實參保存在一個元組中(裝包)
def fn2(*a):
    temp = 0
    for i in a:
        temp += i
    print(temp)

fn2(1,2,3,4,5,6)
# 帶星號的形參只能有一個
# 帶星號的參數可以和其他參數配合使用
# 第一個參數給a、第二個參數給b，剩下的都保存在c的元組中
# 可變參數不是必須寫在最後，但是注意，帶*的參數後的所有參數，必須以關鍵字參數的形式傳遞
# def fn3(a, b, *c):
#     print('a=', a)
#     print('b=', b)
#     print('c=', c)
#fn3(1, 2, 3, 4)

# 第一個參數給a，剩下的位置參數給b元組，c必須使用關鍵字參數傳遞
def fn3(a, *b, c):
    print('a=', a)
    print('b=', b)
    print('c=', c)
fn3(1, 2, 3, c=4)

# 所有位置參數都給a元組，b和c需要使用關鍵字參數傳遞
def fn4(*a, b, c):
    print('a=', a)
    print('b=', b)
    print('c=', c)
fn4(1, 2, b=3, c=4)

# 如果在形參開頭直接寫一個*，則要求我們所有的參數必須以關鍵字參數的形式傳遞
def fn5(*, a, b, c):
    print('a=', a)
    print('b=', b)
    print('c=', c)

fn5(a=1 ,b=3, c=4)

# *形參只能接受位置參數，不能接受關鍵字參數
# def fn6(*a):
#     print('a=', a)
# fn6(b=1, c=4, d=4)

# **形參可以接收其他的關鍵字參數，它會將這些參數統一保存到一個字典中
# 字典的key就是參數的名字，字典的value就是參數的值
# **參數只能有一個，並且必須寫在所有參數的最後
def fn7(b, c, **a):
    print('b=', b)
    print('c=', c)
    print('a=', a)

fn7(a=1, b=3, c=10, d=10)


# 參數的解包(拆包)
def fn8(a, b, c):
    print('a=', a)
    print('b=', b)
    print('c=', c)

# 創建一個元組
t = (10, 20, 30)
# 傳遞實參時，也可以在序列類型的參數前加上星號，這樣它會自動將序列中的元素作為參數傳遞
# 這裡要求序列中的元素個數必須和形參個數相同
fn8(*t)

# 創建一個字典
d = {'a': 100, 'b': 300, 'c': 300}
# 通過 **來對字典進行解包操作
fn8(**d)



